{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is DevBox?","text":"<p>DevBox is a lightweight CLI tool that simplifies local development for teams working on multi-service projects by providing a single source of truth for local environment configuration. </p> <p>Built on top of <code>docker compose</code>, DevBox offers several powerful features to streamline your development workflow.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>Setting up and maintaining a local development environment for projects with multiple interconnected services can be challenging and time-consuming. DevBox helps teams maintain a single source of truth for their local development environment configuration, allowing everyone to focus on coding rather than troubleshooting environment issues.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#automatic-updates","title":"Automatic Updates","text":"<p>Ensures team-wide service configurations stay in sync. When services are added or configurations change, the latest version is immediately available for everyone.</p>"},{"location":"#centralized-repository-control","title":"Centralized Repository Control","text":"<p>Automatically fetches source code from stable branches of multiple repositories, eliminating manual version updates.</p>"},{"location":"#selective-development","title":"Selective Development","text":"<p>Develop specific services locally while others remain at their default (latest) version.</p>"},{"location":"#smart-context-detection","title":"Smart Context Detection","text":"<p>Automatically detects your location in the local filesystem to infer which project or service you're working on:</p> <ul> <li>Project Detection: Identifies the relevant DevBox project by matching Git remote URLs or checking local mounts</li> <li>Service Detection: Determines which service you're working on based on directory structure and Git context</li> </ul>"},{"location":"#predefined-scenarios","title":"Predefined Scenarios","text":"<p>Provides scenarios for common tasks (e.g., running E2E tests) in a single configuration file, eliminating the need to learn service-specific commands.</p>"},{"location":"#zero-config-ssl","title":"Zero-Config SSL","text":"<p>Automatically generates and manages SSL certificates for local development.</p>"},{"location":"#automatic-host-file-updates","title":"Automatic Host File Updates","text":"<p>Manages your <code>/etc/hosts</code> file automatically \u2014 no manual editing required.</p>"},{"location":"certificates/","title":"SSL Certificates","text":"<p>DevBox provides zero-configuration SSL certificate management for local development, automatically generating and managing certificates for your services.</p> <p>SSL certificates are configured in your <code>docker-compose.yml</code> using the <code>x-devbox-cert</code> section.</p>"},{"location":"certificates/#example","title":"Example","text":"<pre><code>x-devbox-cert:\n  domains: [\"*.local.example.com\", \"local.example.com\"]\n  keyFile: \"./certs/local.example.com.key.pem\"\n  certFile: \"./certs/local.example.com.pem\"\n</code></pre>"},{"location":"certificates/#parameters","title":"Parameters","text":"Name Required Description domains yes The domains to generate certificates for keyFile yes The path where the private key file will be stored certFile yes The path where the certificate file will be stored"},{"location":"certificates/#using-certificates","title":"Using Certificates","text":"<p>Developers can use certificates by mounting them into services like nginx or Traefik.</p> <p>Creating Certificates</p> <p>On first run, DevBox generates a root Certificate Authority (CA) pair (<code>~/.devbox/ca.crt</code> and <code>~/.devbox/ca.key</code>). To enable HTTPS for local development, DevBox automatically registers this CA with your system's trust store:</p> <ul> <li>On macOS: Adds the CA to Keychain under the name \"devbox development CA\"</li> <li>On Linux: Adds the CA to either <code>/usr/local/share/ca-certificates/devbox-ca.crt</code> or <code>/etc/pki/ca-trust/source/anchors/devbox-ca.crt</code> depending on your distribution</li> </ul> <p>DevBox then uses this CA to generate and sign certificates for your project's domains.</p> <p>.gitignore</p> <p>Certificate paths are relative to the project root and should be added to the project's <code>.gitignore</code> file. Otherwise, certificates will be deleted during project synchronization with the repository.</p>"},{"location":"config-env/","title":"Environment Configuration","text":"<p>The <code>devbox config env</code> command configures environment variables for your project.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"config-env/#usage","title":"Usage","text":"<pre><code># Configure current project\ndevbox config env\n\n# Configure specific project\ndevbox --name project-name config env\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"config-env/#result","title":"Result","text":"<p>The command opens your default text editor (usually <code>vi</code> or <code>vim</code>) to edit the project-specific <code>.env</code> file. Make your changes and save the file.</p>"},{"location":"config-env/#next-steps","title":"Next Steps","text":"<ul> <li>Update project</li> </ul>"},{"location":"destroy/","title":"Destroy Project","text":"<p>The <code>devbox destroy</code> command removes a project and all its resources completely.</p>"},{"location":"destroy/#usage","title":"Usage","text":"<pre><code>devbox destroy [--name &lt;project-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"destroy/#example","title":"Example","text":"<pre><code># Destroy current project\ndevbox destroy\n\n# Destroy specific project\ndevbox --name project-name destroy\n</code></pre>"},{"location":"destroy/#output","title":"Output","text":"<pre><code>$ devbox destroy\n[*] Down services...\n \u283f Container api-1 Stopped\n \u283f Container db-1 Stopped\n \u283f Network example-app_default Removed\n\n[*] Removing hosts...\n[*] Removing project...\n\nProject 'example-app' has been destroyed.\n</code></pre>"},{"location":"down/","title":"Stopping Services","text":"<p>The <code>devbox down</code> command stops and removes all services in your project, similar to <code>docker compose down</code>.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"down/#usage","title":"Usage","text":"<pre><code>devbox down [--name &lt;project-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"down/#example","title":"Example","text":"<pre><code># Stop current project\ndevbox down\n\n# Stop specific project\ndevbox --name project-name down\n</code></pre>"},{"location":"down/#output","title":"Output","text":"<pre><code>[*] Down services...\n[+] Running 3/3\n \u2714 Container example-app-api-1         Removed      1.2s\n \u2714 Container example-app-frontend-1    Removed      1.2s\n \u2714 Network example-app_default         Removed      0.0s\n</code></pre>"},{"location":"hosts/","title":"Host Management","text":"<p>DevBox automatically manages your <code>/etc/hosts</code> file to provide local domain routing for your services.</p> <p>Host management is configured in your <code>docker-compose.yml</code> using the <code>x-devbox-hosts</code> section.</p>"},{"location":"hosts/#example","title":"Example","text":"<pre><code>x-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"local.example.com\"\n      - \"api.local.example.com\"\n      - \"admin.local.example.com\"\n</code></pre>"},{"location":"hosts/#parameters","title":"Parameters","text":"Name Required Description ip yes The IP address to bind the hosts to hosts yes The hostnames to add to the <code>/etc/hosts</code> file"},{"location":"hosts/#using-hosts","title":"Using Hosts","text":"<p>Your docker-compose manifest can contain multiple services with a gateway (like nginx or Traefik) to route requests. Configure your gateway to bind to 127.0.0.1 and route requests to your services.</p>"},{"location":"info/","title":"Project Info","text":"<p>The <code>devbox info</code> command fetches the latest manifest, updates host file entries, updates SSL certificates, and displays detailed information about your project's sources and mounted volumes.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"info/#usage","title":"Usage","text":"<pre><code>devbox info [--name &lt;project-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"info/#example","title":"Example","text":"<pre><code># Get info for current project\ndevbox info\n\n# Get info for specific project\ndevbox --name example-app info\n</code></pre>"},{"location":"info/#output","title":"Output","text":"<pre><code> Sources:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name           \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 api-service    \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 worker (jobs)  \u2502 Add job processor      \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n Mounts:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Mount path         \u2502 Local path                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 ./sources/api      \u2502 /Users/dev/code/api-service   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"init/","title":"Init Project","text":"<p>The <code>devbox init</code> command initializes a new DevBox project from a manifest repository.</p>"},{"location":"init/#usage","title":"Usage","text":"<pre><code>devbox init &lt;git-source&gt; [--name &lt;project-name&gt;] [--branch &lt;branch-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be derived from the Git source <code>--branch &lt;branch-name&gt;</code> no Branch name. If not specified, will use the repository's default branch"},{"location":"init/#example","title":"Example","text":"<pre><code>devbox init https://github.com/pilat/devbox-example \\\n  --name example-app \\\n  --branch main\n</code></pre>"},{"location":"init/#output","title":"Output","text":"<pre><code>[*] Initializing project...\n\nProject has been successfully initialized!\nNext steps:\n  1. Configure environment (optional):\n     devbox --name example-app config env\n\n  2. Start services:\n     devbox --name example-app up\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>DevBox can be installed via Homebrew, downloaded as a binary, or built from source.</p>"},{"location":"installation/#via-homebrew","title":"Via Homebrew","text":"<pre><code>brew tap pilat/devbox\nbrew install devbox\n</code></pre>"},{"location":"installation/#from-binary-releases","title":"From Binary Releases","text":"<ol> <li>Download the appropriate binary for your system from the Releases Page</li> <li>Make the binary executable and add it to your PATH</li> </ol>"},{"location":"installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Docker Engine 20.10.0 or later</li> <li>Docker Compose V2</li> <li>Git 2.28 or later</li> </ul>"},{"location":"installation/#verifying-installation","title":"Verifying Installation","text":"<p>Verify your installation by running:</p> <pre><code>devbox --version\n</code></pre>"},{"location":"list/","title":"List Projects","text":"<p>The <code>devbox list</code> command displays all DevBox projects on your system and their current status.</p>"},{"location":"list/#usage","title":"Usage","text":"<pre><code>devbox list\n</code></pre>"},{"location":"list/#output","title":"Output","text":"<p>Example output: <pre><code> Projects:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name         \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 example-app  \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 demo-project \u2502 Fix database migration \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"logs/","title":"Viewing Logs","text":"<p>The <code>devbox logs</code> command displays and follows logs from your services, similar to <code>docker compose logs --tail 500 --follow</code>.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"logs/#usage","title":"Usage","text":"<pre><code>devbox logs [--name &lt;project-name&gt;] [&lt;service-name-1&gt; &lt;service-name-2&gt; ...]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source <code>&lt;service-name-1&gt; &lt;service-name-2&gt; ...</code> no Service names to show logs for. If not specified, shows logs from all services"},{"location":"logs/#example","title":"Example","text":"<pre><code># View logs from all services\ndevbox logs\n\n# View logs from specific services\ndevbox logs service1 service2\n\n# View logs from a specific project\ndevbox --name project-name logs\n</code></pre>"},{"location":"mount-sources/","title":"Mount Local Sources","text":"<p>The <code>devbox mount</code> command lets you use local source code instead of the stable sources in your project's containers.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"mount-sources/#usage","title":"Usage","text":"<pre><code>devbox mount [--name &lt;project-name&gt;] [--source &lt;source-name&gt;] [--path &lt;path-to-sources&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source <code>--source &lt;source-name&gt;</code> no Source name. If not specified, will be detected from Git source <code>--path &lt;path-to-sources&gt;</code> no Path to source code. If not specified, current directory will be used"},{"location":"mount-sources/#example","title":"Example","text":"<pre><code># Mount sources from current directory\ncd /path/to/your/sources\ndevbox mount\n</code></pre>"},{"location":"ps/","title":"Process Status","text":"<p>The <code>devbox ps</code> command displays real-time status information for all services in your project.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"ps/#usage","title":"Usage","text":"<pre><code>devbox ps [--name &lt;project-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"ps/#example","title":"Example","text":"<pre><code># Show status of current project\ndevbox ps\n\n# Show status of specific project\ndevbox --name project-name ps\n</code></pre>"},{"location":"ps/#output-format","title":"Output Format","text":"<p>Example output: <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Age      \u2502 Name        \u2502 State   \u2502 Health  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2d       \u2502 nginx       \u2502 running \u2502 healthy \u2502\n\u2502 01:23:45 \u2502 api         \u2502 running \u2502 healthy \u2502\n\u2502 00:15:30 \u2502 worker      \u2502 running \u2502 healthy \u2502\n\u2502          \u2502 db-migrate  \u2502 exited  \u2502         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"quick-start/","title":"Quick Start Guide","text":"<p>This guide will help you get started with DevBox by walking through the basic workflow.</p>"},{"location":"quick-start/#initialize-a-project","title":"Initialize a Project","text":"<p>Initialize a new DevBox project from a manifest repository:</p> <pre><code>devbox init https://github.com/pilat/devbox-example\n</code></pre>"},{"location":"quick-start/#start-services","title":"Start Services","text":"<p>Start all services defined in your project (requires sudo password on first run):</p> <pre><code>devbox --name example-app up\n</code></pre> <p>DevBox will:</p> <ul> <li>Fetch source code from the manifest repository</li> <li>Pull required Docker images</li> <li>Build services as needed</li> <li>Configure SSL certificates</li> <li>Update host files</li> <li>Start all services</li> </ul>"},{"location":"quick-start/#mount-source-code","title":"Mount Source Code","text":"<p>To use your local source code instead of the manifest repository version:</p> <pre><code>cd /path/to/your/copy/of/service\ndevbox mount\n</code></pre>"},{"location":"quick-start/#view-service-logs","title":"View Service Logs","text":"<pre><code># View logs for all services\ndevbox logs\n\n# View logs for specific services\ndevbox logs service-name\n</code></pre>"},{"location":"quick-start/#stop-services","title":"Stop Services","text":"<pre><code># Stop all services\ndevbox down\n</code></pre>"},{"location":"restart/","title":"Restart Services","text":"<p>The <code>devbox restart</code> command combines <code>devbox down</code> and <code>devbox up</code>. It stops and removes all services, then updates the project, fetches recent sources, and builds services before starting them.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"restart/#usage","title":"Usage","text":"<pre><code>devbox restart [--name &lt;project-name&gt;] [--profile &lt;profile-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source <code>--profile &lt;profile-name&gt;</code> no Profile to use from your <code>docker-compose.yml</code> file"},{"location":"restart/#example","title":"Example","text":"<pre><code># Restart current project\ndevbox restart\n\n# Restart specific project\ndevbox --name project-name restart\n</code></pre>"},{"location":"restart/#output","title":"Output","text":"<pre><code>[*] Restart services...\n[+] Running 3/3\n \u2714 Container example-app-api-1         Restarted      1.2s\n \u2714 Container example-app-frontend-1    Restarted      1.2s\n \u2714 Container example-app-worker-1      Restarted      1.2s\n</code></pre>"},{"location":"run/","title":"Running Commands","text":"<p>The <code>devbox run</code> command executes predefined scenarios from your project configuration.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"run/#usage","title":"Usage","text":"<pre><code># Run a scenario\ndevbox run &lt;scenario-name&gt; [arg1 arg2 ...]\n\n# Run a scenario in a specific project\ndevbox --name &lt;project-name&gt; run &lt;scenario-name&gt; [arg1 arg2 ...]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"run/#examples","title":"Examples","text":"<pre><code># Run a test scenario\ndevbox run test\n\n# Run a test scenario with arguments\ndevbox run test --verbose --suite=api\n\n# Run a scenario in a specific project\ndevbox --name project-name run test\n</code></pre>"},{"location":"run/#see-also","title":"See Also","text":"<ul> <li>Scenarios</li> </ul>"},{"location":"scenarios/","title":"Scenarios","text":"<p>Scenarios in DevBox are predefined commands that can be executed within your local services. They provide a convenient way to run common development tasks like running tests, managing databases, or starting development consoles.</p> <p>Scenarios are configured in your <code>docker-compose.yml</code> using the <code>x-devbox-scenarios</code> section.</p>"},{"location":"scenarios/#example","title":"Example","text":"<pre><code>x-devbox-scenarios:\n  console:\n    service: api\n    description: \"Run API console\"\n    command: [\"bundle\", \"exec\", \"rails\", \"c\"]\n    interactive: true\n    tty: true\n    working_dir: /app\n    user: app\n\n  e2e:\n    service: frontend\n    description: \"Run E2E tests\"\n    command: [\"npm\", \"run\", \"test\"]\n</code></pre>"},{"location":"scenarios/#parameters","title":"Parameters","text":"Name Required Description service yes The service to run the command in description no A description of what the scenario does command yes The command to run (as an array) entrypoint no Override the container's entrypoint tty no Whether to allocate a TTY (default: true) interactive no Whether to run in interactive mode (default: true) working_dir no Working directory inside the container user no User to run as inside the container"},{"location":"scenarios/#using-scenarios","title":"Using Scenarios","text":"<p>Run scenarios using the <code>devbox run</code> command.</p> <p>See Run Scenarios for details.</p>"},{"location":"shell/","title":"Shell Access","text":"<p>The <code>devbox shell</code> command provides interactive shell access to running services. It automatically detects and uses the best available shell in the container, similar to <code>docker compose exec -it</code>.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"shell/#usage","title":"Usage","text":"<pre><code>devbox shell [--name &lt;project-name&gt;] &lt;service-name&gt;\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"shell/#example","title":"Example","text":"<pre><code># Access shell in a service\ndevbox shell service-name\n\n# Access shell in a specific project's service\ndevbox --name project-name shell service-name\n</code></pre>"},{"location":"shell/#shell-detection","title":"Shell Detection","text":"<p>DevBox tries shells in the following order: 1. <code>/bin/zsh</code> 2. <code>/bin/bash</code> 3. <code>/bin/sh</code> 4. <code>/bin/ash</code></p> <p>The first available shell in the container will be used.</p>"},{"location":"sources/","title":"Sources Configuration","text":"<p>The <code>x-devbox-sources</code> block defines the repositories containing your service source code. Each repository will be cloned into the project's <code>sources</code> directory. DevBox automatically synchronizes all sources from their remote repositories when you run <code>devbox up</code>, <code>devbox update</code>, or <code>devbox restart</code>.</p>"},{"location":"sources/#example","title":"Example","text":"<pre><code>x-devbox-sources:\n  api:  # This name will be used as the directory name in ./sources\n    url: https://github.com/company/monorepo.git\n    branch: main \n    sparseCheckout:\n      - backend/api\n\n  dispatcher:\n    url: https://github.com/company/monorepo.git\n    branch: main\n    sparseCheckout:\n      - backend/dispatcher\n\n  frontend:\n    url: https://github.com/company/monorepo.git\n</code></pre>"},{"location":"sources/#parameters","title":"Parameters","text":"Name Required Description url yes Repository URL to clone (supports both HTTPS and SSH formats) branch no Branch or tag to check out (defaults to repository's default branch) sparseCheckout no List of specific paths to check out (useful for large repositories to reduce sync time)"},{"location":"sources/#directory-structure","title":"Directory Structure","text":"<p>The example above creates the following directory structure:</p> <pre><code>.\n\u2514\u2500\u2500 .devbox/\n    \u2514\u2500\u2500 project-name/\n        \u2514\u2500\u2500 sources/\n            \u251c\u2500\u2500 api/\n            \u251c\u2500\u2500 dispatcher/\n            \u2514\u2500\u2500 frontend/\n</code></pre> <p>You can reference these source directories in your <code>docker-compose.yaml</code> file to ensure services use the latest source code:</p> <pre><code>services:\n  api:\n    volumes:\n      - ./sources/api:/app/api:ro\n</code></pre> <p>Mounting Source Code</p> <p>You can mount source code without the <code>ro</code> (read-only) flag, but any files created in the <code>sources</code> directory will be lost during <code>devbox up</code>, <code>devbox update</code>, or <code>devbox restart</code> operations. For persistent changes, mount volumes below the source code directory.</p>"},{"location":"sources/#local-development","title":"Local Development","text":"<p>Developers can use their own version of the source code instead of the managed one. See Mount Sources for details.</p>"},{"location":"structure/","title":"Project Structure","text":"<p>DevBox is designed to work with a dedicated repository that serves as a single source of truth for your local development environment. This repository is referred to as the project repository throughout the documentation.</p> <p>Repository Requirements</p> <ul> <li>A <code>docker-compose.yaml</code> file must be present in the repository root</li> <li>The <code>sources</code> directory is not allowed</li> <li><code>.env</code> and <code>.devboxstate</code> files are not allowed</li> </ul> <p>The repository can contain any additional files or directories needed, such as scripts, configuration files, or Dockerfiles.</p>"},{"location":"structure/#project-initialization","title":"Project Initialization","text":"<p>When you run <code>devbox init &lt;git-repo-url&gt;</code> followed by <code>devbox up --name &lt;project-name&gt;</code>, DevBox creates the following structure on your machine:</p> <pre><code>~/.devbox/\n\u251c\u2500\u2500 project-name/           # Project name\n|   |\u2500\u2500 .devboxstate        # DevBox's internal state\n|   |\u2500\u2500 .env                # Environment variables managed by DevBox\n|   |\u2500\u2500 .git                # Standard Git directory\n\u2502   \u251c\u2500\u2500 docker-compose.yml  # Manifest file from the project repository\n\u2502   \u2514\u2500\u2500 sources/            # Sources managed by DevBox\n\u2502       \u251c\u2500\u2500 api/...\n\u2502       \u2514\u2500\u2500 frontend/...\n\u251c\u2500\u2500 ca.pem                  # CA certificate managed by DevBox\n\u2514\u2500\u2500 ca.key                  # CA private key managed by DevBox\n</code></pre> <p>DevBox will synchronize this directory with the project repository whenever you run <code>devbox up</code>, <code>devbox update</code>, or <code>devbox restart</code>.</p> <p>Important</p> <p>The <code>~/.devbox/project-name</code> directory is managed by DevBox. Do not modify it manually. To make changes to the project, modify the remote repository and run <code>devbox update</code> to synchronize the changes.</p>"},{"location":"structure/#extensions","title":"Extensions","text":"<p>DevBox extends the standard <code>docker-compose.yaml</code> file with additional configuration blocks using the <code>x-devbox-</code> prefix. For more information, see:</p> <ul> <li>Sources</li> <li>Certificates</li> <li>Hosts</li> <li>Scenarios</li> </ul>"},{"location":"umount-sources/","title":"Unmount Local Sources","text":"<p>The <code>devbox umount</code> command removes local source code mounts from your project's containers, reverting to the stable sources.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"umount-sources/#usage","title":"Usage","text":"<pre><code>devbox umount [--name &lt;project-name&gt;] [--source &lt;source-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source <code>--source &lt;source-name&gt;</code> no Source name. If not specified, will be detected from Git source"},{"location":"umount-sources/#example","title":"Example","text":"<pre><code># Unmount sources from current directory\ndevbox umount\n</code></pre>"},{"location":"up/","title":"Starting Services","text":"<p>The <code>devbox up</code> command starts services in your DevBox project. It updates the project, fetches recent sources, and builds services before starting them, similar to <code>docker compose up -d</code>.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"up/#usage","title":"Usage","text":"<pre><code>devbox up [--name &lt;project-name&gt;] [--profile &lt;profile-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source <code>--profile &lt;profile-name&gt;</code> no Profile to use from your <code>docker-compose.yml</code> file"},{"location":"up/#example","title":"Example","text":"<pre><code># Start current project\ndevbox up\n\n# Start with specific profiles\ndevbox up --profile profile1 --profile profile2\n</code></pre>"},{"location":"up/#output","title":"Output","text":"<pre><code>[*] Updating project...\n[*] Update hosts file...\n[*] Setup CA...\n[*] Generate certificates...\n[*] Updating sources...\n[+] Updating sources 4/4\n \u2714 Source api-service      Synced                   2.1s\n \u2714 Source web-frontend     Synced                   1.9s\n \u2714 Source worker           Synced                   1.8s\n \u2714 Source database         Synced                   1.7s\n\n[*] Build services...\n[+] Building 3/3\n \u2714 Service api         Built                        1.4s\n \u2714 Service frontend    Built                        2.5s\n \u2714 Service worker      Built                        1.4s\n\n[*] Up services...\n[+] Running 3/3\n \u2714 Network example-app_default         Created      0.0s\n \u2714 Container example-app-api-1         Started      1.2s\n \u2714 Container example-app-frontend-1    Started      1.2s\n \u2714 Container example-app-worker-1      Started      1.2s\n</code></pre>"},{"location":"update/","title":"Update Project","text":"<p>The <code>devbox update</code> command synchronizes your project with its repository, updating host file entries and SSL certificates as needed.</p> <p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"},{"location":"update/#usage","title":"Usage","text":"<pre><code>devbox update [--name &lt;project-name&gt;]\n</code></pre> Option Required Description <code>--name &lt;project-name&gt;</code> no Project name. If not specified, will be detected from Git source"},{"location":"update/#example","title":"Example","text":"<pre><code># Update current project\ndevbox update\n\n# Update specific project\ndevbox --name project-name update\n</code></pre>"},{"location":"update/#output","title":"Output","text":"<pre><code>[*] Updating project...\n[*] Updating sources...\n \u283f Source api-service: Synced\n \u283f Source worker: Synced\n \u283f Source frontend: Synced\n \u283f Source shared-lib: Synced\n\n Sources:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name           \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 api-service    \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 worker         \u2502 Add job processor      \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"snippets/auto-detect-note/","title":"Auto detect note","text":"<p>Note</p> <p>Like other DevBox commands, this command supports automatic project detection based on your current directory. If automatic detection fails, you can specify the project name explicitly.</p>"}]}