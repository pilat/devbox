{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is DevBox?","text":"<p>DevBox is a specialized development environment orchestrator for complex, multi-service projects. Built on top of Docker Compose, it manages source code, handles automatic updates, and simplifies service orchestration through a single CLI.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>Working on projects with multiple small, interconnected services can make setting up and maintaining a local development environment both challenging and time-consuming. DevBox helps teams maintain a single source of truth for their local development environment, allowing everyone to focus on coding rather than troubleshooting and keeping the environment up to date.</p>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#automatic-updates","title":"Automatic Updates","text":"<p>Ensures team-wide service configurations stay in sync. When a new service is added or a configuration changes, the latest version is available for everyone.</p>"},{"location":"#centralized-repository-control","title":"Centralized Repository Control","text":"<p>Automatically fetches source code from stable branches of multiple repositories, reducing the need for manual version updates.</p>"},{"location":"#selective-development","title":"Selective Development","text":"<p>Allows you to develop specific services locally while others remain at their default (latest) version.</p>"},{"location":"#smart-context-detection","title":"Smart Context Detection","text":"<p>Detects your location in the local filesystem to infer which project or service you're working on. This includes:</p> <ul> <li>Project Detection: Matches your Git remote URLs or checks local mounts to identify the relevant DevBox project</li> <li>Service Detection: Identifies which service you're working on based on your directory structure and Git context</li> </ul>"},{"location":"#predefined-scenarios","title":"Predefined Scenarios","text":"<p>Provides scenarios for common tasks (e.g., running E2E tests) in a single configuration file, reducing the need to learn service-specific commands.</p>"},{"location":"#zero-config-ssl","title":"Zero-Config SSL","text":"<p>Automatically generates and manages SSL certificates for local development.</p>"},{"location":"#automatic-host-file-updates","title":"Automatic Host File Updates","text":"<p>Eliminates the need to manually edit <code>/etc/hosts</code> \u2014 DevBox takes care of it.</p>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code># Initialize from a manifest repository\ndevbox init https://github.com/pilat/devbox-example \\\n  --name example-app \\\n  --branch main\n\n# Start all services\ndevbox --name example-app up\n\n# Mount local copy of the source code\ncd /path/to/your/project\ndevbox mount\n\n# Get shell access to a service\ndevbox shell service-name\n\n# View service logs\ndevbox logs [service-name]\n\n# Stop all services\ndevbox down\n</code></pre>"},{"location":"#next-steps","title":"Next Steps","text":"<ul> <li>Check out the Installation guide to get started</li> <li>Follow the Quick Start tutorial</li> <li>Learn about Project Management</li> <li>Explore Advanced Features</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>DevBox is available via Homebrew, as binaries, or you can build it from source.</p>"},{"location":"getting-started/installation/#via-homebrew","title":"Via Homebrew","text":"<pre><code>brew tap pilat/devbox\nbrew install devbox\n</code></pre>"},{"location":"getting-started/installation/#from-binary-releases","title":"From Binary Releases","text":"<ol> <li>Visit the Releases Page</li> <li>Download the appropriate binary for your system</li> <li>Add it to your PATH</li> </ol>"},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Docker Engine 20.10.0 or newer</li> <li>Docker Compose V2</li> <li>Git 2.28 or newer</li> </ul>"},{"location":"getting-started/installation/#verifying-installation","title":"Verifying Installation","text":"<p>After installation, verify that DevBox is properly installed:</p> <pre><code>devbox --version\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Once you have DevBox installed, you can:</p> <ol> <li>Follow the Quick Start guide</li> <li>Learn about Project Initialization</li> <li>Explore Basic Operations </li> </ol>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>This guide will help you get started with DevBox by walking through the basic workflow.</p>"},{"location":"getting-started/quick-start/#initialize-a-project","title":"Initialize a Project","text":"<p>First, initialize a new DevBox project from a manifest repository:</p> <pre><code>devbox init https://github.com/pilat/devbox-example \\\n  --name example-app \\\n  --branch main\n</code></pre> <p>This command:</p> <ul> <li>Clones the manifest repository</li> <li>Sets up the project structure</li> <li>Creates necessary configuration files</li> </ul>"},{"location":"getting-started/quick-start/#start-services","title":"Start Services","text":"<p>Start all services defined in your project:</p> <pre><code>devbox --name example-app up\n</code></pre> <p>DevBox will:</p> <ul> <li>Pull required Docker images</li> <li>Build services if needed</li> <li>Set up networking</li> <li>Configure SSL certificates</li> <li>Update host files</li> <li>Start all services</li> </ul>"},{"location":"getting-started/quick-start/#mount-source-code","title":"Mount Source Code","text":"<p>To develop a service locally:</p> <pre><code>cd /path/to/your/service\ndevbox mount\n</code></pre> <p>This will:</p> <ul> <li>Detect which project and service you're working on</li> <li>Mount your local source code into the container</li> <li>Automatically rebuild and restart affected services</li> </ul>"},{"location":"getting-started/quick-start/#common-operations","title":"Common Operations","text":""},{"location":"getting-started/quick-start/#view-service-logs","title":"View Service Logs","text":"<pre><code># View logs for all services\ndevbox logs\n\n# View logs for specific services\ndevbox logs service-name\n</code></pre>"},{"location":"getting-started/quick-start/#access-service-shell","title":"Access Service Shell","text":"<pre><code># Get shell access to a service\ndevbox shell service-name\n</code></pre>"},{"location":"getting-started/quick-start/#run-predefined-scenarios","title":"Run Predefined Scenarios","text":"<pre><code># Run a scenario defined in your project\ndevbox run scenario-name\n</code></pre>"},{"location":"getting-started/quick-start/#stop-services","title":"Stop Services","text":"<pre><code># Stop all services\ndevbox down\n</code></pre>"},{"location":"getting-started/quick-start/#smart-context-detection","title":"Smart Context Detection","text":"<p>DevBox uses smart context detection to determine which project and service you're working with:</p> <ol> <li>Project Detection: Based on:</li> <li>Git remote URLs</li> <li>Local mounts</li> <li> <p>Current directory</p> </li> <li> <p>Service Detection: Based on:</p> </li> <li>Directory structure</li> <li>Git context</li> <li>Mount points</li> </ol> <p>This means you often don't need to specify the project or service name explicitly.</p>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about Project Structure</li> <li>Explore Advanced Features</li> <li>Check the CLI Reference </li> </ul>"},{"location":"reference/configuration/grace-periods/","title":"Stop Grace Period","text":"<p>DevBox allows you to configure a default stop grace period for all services in your project.</p>"},{"location":"reference/configuration/grace-periods/#configuration","title":"Configuration","text":"<p>The stop grace period is configured in your <code>docker-compose.yml</code> using the <code>x-devbox-default-stop-grace-period</code> extension:</p> <pre><code>x-devbox-default-stop-grace-period: 5s\n\nservices:\n  api:\n    image: api:latest\n    # Will use the default grace period (5s)\n\n  worker:\n    image: worker:latest\n    stop_grace_period: 10s  # Service-specific override\n</code></pre>"},{"location":"reference/configuration/grace-periods/#how-it-works","title":"How It Works","text":"<ul> <li>The <code>x-devbox-default-stop-grace-period</code> setting applies to all services that don't specify their own <code>stop_grace_period</code></li> <li>Individual services can override this by setting their own <code>stop_grace_period</code></li> <li>The value should be a duration string (e.g., \"5s\", \"1m\")</li> </ul>"},{"location":"reference/configuration/grace-periods/#example-configuration","title":"Example Configuration","text":"<pre><code># Set default grace period for all services\nx-devbox-default-stop-grace-period: 5s\n\nservices:\n  # Uses default grace period (5s)\n  api:\n    image: api:latest\n\n  # Uses default grace period (5s)\n  frontend:\n    image: frontend:latest\n\n  # Overrides with custom grace period\n  worker:\n    image: worker:latest\n    stop_grace_period: 30s\n</code></pre>"},{"location":"reference/configuration/grace-periods/#tips","title":"Tips","text":"<ul> <li>Use reasonable grace periods based on service shutdown needs</li> <li>Consider longer periods for services that need cleanup time</li> <li>Override per-service when needed</li> <li>Use consistent time units across configuration </li> </ul>"},{"location":"reference/configuration/overview/","title":"Configuration Overview","text":"<p>DevBox uses an extended version of Docker Compose configuration format with additional sections for managing development environments.</p>"},{"location":"reference/configuration/overview/#basic-structure","title":"Basic Structure","text":"<pre><code># Default grace period for stopping services\nx-devbox-default-stop-grace-period: 5s\n\n# Source code repositories configuration\nx-devbox-sources:\n  api-service:\n    url: https://github.com/example/services.git\n    branch: main\n    sparseCheckout:\n      - cmd/api-service\n\n  web-frontend:\n    url: https://github.com/example/frontend.git\n    branch: main\n\n# Predefined scenarios for common tasks\nx-devbox-scenarios:\n  test:\n    service: api\n    description: \"Run unit tests\"\n    command: [\"go\", \"test\", \"./...\"]\n\n  migrate:\n    service: db\n    description: \"Run database migrations\"\n    command: [\"./migrate.sh\"]\n    working_dir: /app/migrations\n\n# SSL certificate configuration\nx-devbox-cert:\n  domains: [\"*.local.example.com\", \"local.example.com\"]\n  keyFile: \"./certs/local.example.com.key.pem\"\n  certFile: \"./certs/local.example.com.pem\"\n\n# Host file entries\nx-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"local.example.com\"\n      - \"api.local.example.com\"\n      - \"web.local.example.com\"\n      - \"admin.local.example.com\"\n\n# Standard Docker Compose service definitions\nservices:\n  nginx:\n    image: nginx:latest\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n\n  api:\n    build: ./api\n    environment:\n      - DATABASE_URL=postgres://user:pass@db:5432/dbname\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_USER=user\n      - POSTGRES_PASSWORD=pass\n</code></pre>"},{"location":"reference/configuration/overview/#extension-sections","title":"Extension Sections","text":"<p>DevBox adds several extension sections to the standard Docker Compose configuration:</p>"},{"location":"reference/configuration/overview/#x-devbox-default-stop-grace-period","title":"<code>x-devbox-default-stop-grace-period</code>","text":"<p>Defines the default grace period for stopping services. Can be overridden per service.</p>"},{"location":"reference/configuration/overview/#x-devbox-sources","title":"<code>x-devbox-sources</code>","text":"<p>Configures source code repositories that will be managed by DevBox. See Sources Configuration for details.</p>"},{"location":"reference/configuration/overview/#x-devbox-scenarios","title":"<code>x-devbox-scenarios</code>","text":"<p>Defines reusable commands that can be executed in services. See Scenarios Configuration for details.</p>"},{"location":"reference/configuration/overview/#x-devbox-cert","title":"<code>x-devbox-cert</code>","text":"<p>Configures SSL certificates for local development. See SSL Certificates Configuration for details.</p>"},{"location":"reference/configuration/overview/#x-devbox-hosts","title":"<code>x-devbox-hosts</code>","text":"<p>Configures host file entries for local domain resolution. See Host Management Configuration for details.</p>"},{"location":"reference/configuration/overview/#health-checks","title":"Health Checks","text":"<p>DevBox supports Docker's health check configuration with additional features:</p> <pre><code>x-healthcheck: &amp;healthcheck\n  interval: 30s\n  start_interval: 1s\n  start_period: 120s\n  retries: 3\n\nservices:\n  api:\n    healthcheck:\n      &lt;&lt;: *healthcheck\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8080/health\"]\n</code></pre> <p>See Health Checks for more details.</p>"},{"location":"reference/configuration/overview/#environment-variables","title":"Environment Variables","text":"<p>Environment variables can be defined: - In service definitions - In <code>.env</code> files - Through command line - Through mount detection (<code>DEVBOX_SERVICE_NAME_SOURCE</code>)</p> <p>See Environment Variables for more details. </p>"},{"location":"reference/configuration/scenarios/","title":"Scenarios","text":"<p>Scenarios in DevBox allow you to define predefined commands that can be executed within your services. They provide a convenient way to run common development tasks, debug commands, or maintenance operations.</p>"},{"location":"reference/configuration/scenarios/#configuration","title":"Configuration","text":"<p>Scenarios are configured in your <code>docker-compose.yml</code> using the <code>x-devbox-scenarios</code> section:</p> <pre><code>x-devbox-scenarios:\n  console:\n    service: api\n    description: \"Run API console\"\n    command: [\"bundle\", \"exec\", \"rails\", \"c\"]\n    interactive: true\n    tty: true\n    working_dir: /app\n    user: app\n\n  test:\n    service: api\n    description: \"Run test suite\"\n    command: [\"bundle\", \"exec\", \"rspec\"]\n    interactive: false\n\n  migrate:\n    service: api\n    description: \"Run database migrations\"\n    command: [\"bundle\", \"exec\", \"rails\", \"db:migrate\"]\n    entrypoint: [\"/bin/sh\", \"-c\"]\n</code></pre>"},{"location":"reference/configuration/scenarios/#scenario-options","title":"Scenario Options","text":"<p>Each scenario can be configured with the following options:</p> <ul> <li><code>service</code> (required): The service to run the command in</li> <li><code>description</code>: A description of what the scenario does</li> <li><code>command</code>: The command to run (as array)</li> <li><code>interactive</code>: Whether to run in interactive mode (default: true)</li> <li><code>tty</code>: Whether to allocate a TTY (default: true)</li> <li><code>working_dir</code>: Working directory inside the container</li> <li><code>user</code>: User to run as inside the container</li> <li><code>entrypoint</code>: Override the container's entrypoint</li> </ul>"},{"location":"reference/configuration/scenarios/#using-scenarios","title":"Using Scenarios","text":"<p>Run a scenario using the <code>devbox run</code> command:</p> <pre><code># Run a scenario\ndevbox run console\n\n# Pass additional arguments\ndevbox run test spec/models\n\n# List available scenarios\ndevbox run --help\n</code></pre>"},{"location":"reference/configuration/scenarios/#common-use-cases","title":"Common Use Cases","text":""},{"location":"reference/configuration/scenarios/#development-console","title":"Development Console","text":"<pre><code>x-devbox-scenarios:\n  console:\n    service: api\n    description: \"Start development console\"\n    command: [\"rails\", \"console\"]\n</code></pre>"},{"location":"reference/configuration/scenarios/#database-operations","title":"Database Operations","text":"<pre><code>x-devbox-scenarios:\n  migrate:\n    service: db\n    description: \"Run migrations\"\n    command: [\"rails\", \"db:migrate\"]\n\n  seed:\n    service: db\n    description: \"Seed database\"\n    command: [\"rails\", \"db:seed\"]\n</code></pre>"},{"location":"reference/configuration/scenarios/#testing","title":"Testing","text":"<pre><code>x-devbox-scenarios:\n  test:\n    service: test\n    description: \"Run test suite\"\n    command: [\"rspec\"]\n    interactive: false\n\n  lint:\n    service: test\n    description: \"Run linters\"\n    command: [\"rubocop\"]\n</code></pre>"},{"location":"reference/configuration/scenarios/#shell-access","title":"Shell Access","text":"<pre><code>x-devbox-scenarios:\n  shell:\n    service: api\n    description: \"Start shell\"\n    command: [\"/bin/bash\"]\n    working_dir: /app\n</code></pre>"},{"location":"reference/configuration/scenarios/#features","title":"Features","text":"<ul> <li>Service Integration: Runs within specified service containers</li> <li>Argument Passing: Additional arguments can be passed to scenarios</li> <li>Interactive Mode: Support for interactive and non-interactive execution</li> <li>Environment Preservation: Inherits service environment and configuration</li> <li>Shell Completion: Scenario names are available in shell completion</li> </ul>"},{"location":"reference/configuration/scenarios/#tips","title":"Tips","text":"<ul> <li>Use descriptive scenario names</li> <li>Add helpful descriptions</li> <li>Group related scenarios</li> <li>Consider interactive needs</li> <li>Set appropriate working directories</li> <li>Use consistent naming patterns </li> </ul>"},{"location":"reference/configuration/sources/","title":"Sources Configuration","text":"<p>The <code>x-devbox-sources</code> section defines Git repositories that DevBox will manage for your development environment.</p>"},{"location":"reference/configuration/sources/#configuration-structure","title":"Configuration Structure","text":"<pre><code>x-devbox-sources:\n  service-name:\n    url: string           # Git repository URL\n    branch: string        # Branch to checkout\n    sparseCheckout:       # Optional: List of paths to checkout\n      - string\n    environment:         # Optional: Environment variables for the service\n      - string\n</code></pre>"},{"location":"reference/configuration/sources/#example-configuration","title":"Example Configuration","text":"<pre><code>x-devbox-sources:\n  api-service:\n    url: https://github.com/example/services.git\n    branch: main\n    sparseCheckout:\n      - cmd/api-service\n      - pkg/shared\n\n  worker-service:\n    url: https://github.com/example/services.git\n    branch: main\n    sparseCheckout:\n      - cmd/worker\n      - contrib\n\n  frontend:\n    url: https://github.com/example/frontend.git\n    branch: main\n\n  shared-lib:\n    url: https://github.com/example/shared.git\n    branch: main\n    sparseCheckout: [\"lib\", \"docs\"]\n</code></pre>"},{"location":"reference/configuration/sources/#properties","title":"Properties","text":""},{"location":"reference/configuration/sources/#url","title":"<code>url</code>","text":"<p>The Git repository URL. Supports both HTTPS and SSH formats: <pre><code>url: https://github.com/example/repo.git\n# or\nurl: git@github.com:example/repo.git\n</code></pre></p>"},{"location":"reference/configuration/sources/#branch","title":"<code>branch</code>","text":"<p>The Git branch to checkout. This can be: - Branch name - Tag - Commit hash</p> <pre><code>branch: main\n# or\nbranch: v1.0.0\n# or\nbranch: feat/new-feature\n</code></pre>"},{"location":"reference/configuration/sources/#sparsecheckout","title":"<code>sparseCheckout</code>","text":"<p>Optional list of paths to checkout. This allows you to checkout only specific directories from a repository, saving disk space and improving performance.</p> <pre><code>sparseCheckout:\n  - cmd/service-name     # Single directory\n  - pkg/shared/**        # Directory and all subdirectories\n  - \"*.md\"              # All markdown files\n</code></pre>"},{"location":"reference/configuration/sources/#environment","title":"<code>environment</code>","text":"<p>Optional list of environment variables to be set for services using this source.</p> <pre><code>environment:\n  - \"DEBUG=true\"\n  - \"SERVICE_PATH=/app/cmd/service\"\n</code></pre>"},{"location":"reference/configuration/sources/#source-management","title":"Source Management","text":"<p>DevBox manages sources in the <code>sources</code> directory of your project:</p> <pre><code>your-project/\n  \u251c\u2500\u2500 docker-compose.yml\n  \u2514\u2500\u2500 sources/\n      \u251c\u2500\u2500 api-service/\n      \u251c\u2500\u2500 worker-service/\n      \u251c\u2500\u2500 frontend/\n      \u2514\u2500\u2500 shared-lib/\n</code></pre>"},{"location":"reference/configuration/sources/#local-development","title":"Local Development","text":"<p>When developing locally, you can mount your local copy of the source code:</p> <pre><code>cd /path/to/local/api-service\ndevbox mount\n</code></pre> <p>This will: 1. Detect which project and service the code belongs to 2. Mount your local directory instead of the managed source 3. Set appropriate environment variables 4. Rebuild and restart affected services</p>"},{"location":"reference/configuration/sources/#source-updates","title":"Source Updates","text":"<p>Sources are updated when: - Running <code>devbox update</code> - Starting services with <code>devbox up</code> - Mounting/unmounting local sources</p> <p>The update process: 1. Fetches latest changes from remote 2. Checks out specified branch 3. Applies sparse checkout settings 4. Updates submodules if present </p>"},{"location":"user-guide/advanced-features/certificates/","title":"SSL Certificates","text":"<p>DevBox provides zero-configuration SSL certificate management for local development, automatically generating and managing certificates for your services.</p>"},{"location":"user-guide/advanced-features/certificates/#configuration","title":"Configuration","text":"<p>SSL certificates are configured in your <code>docker-compose.yml</code> using the <code>x-devbox-cert</code> section:</p> <pre><code>x-devbox-cert:\n  domains: [\"*.local.example.com\", \"local.example.com\"]\n  keyFile: \"./certs/local.example.com.key.pem\"\n  certFile: \"./certs/local.example.com.pem\"\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#features","title":"Features","text":"<ul> <li>Automatic certificate generation</li> <li>Local CA management</li> <li>Wildcard domain support</li> <li>Automatic renewal</li> <li>One-time CA installation</li> </ul>"},{"location":"user-guide/advanced-features/certificates/#how-it-works","title":"How It Works","text":"<ol> <li>Initial Setup</li> <li>DevBox creates a local Certificate Authority (CA)</li> <li>Generates CA certificate</li> <li> <p>Installs CA in system trust store (requires sudo)</p> </li> <li> <p>Certificate Management</p> </li> <li>Generates SSL certificates for configured domains</li> <li>Signs certificates with local CA</li> <li> <p>Places certificates in specified locations</p> </li> <li> <p>During Operation</p> </li> <li>Certificates are used by services (e.g., nginx)</li> <li>Browsers trust the certificates</li> <li>No security warnings</li> </ol>"},{"location":"user-guide/advanced-features/certificates/#example-configuration","title":"Example Configuration","text":"<pre><code># SSL Certificate configuration\nx-devbox-cert:\n  domains: \n    - \"*.local.example.com\"\n    - \"local.example.com\"\n    - \"api.local.example.com\"\n  keyFile: \"./certs/local.example.com.key.pem\"\n  certFile: \"./certs/local.example.com.pem\"\n\n# Using certificates in nginx\nservices:\n  nginx:\n    image: nginx:latest\n    volumes:\n      - ./certs:/etc/nginx/ssl:ro\n    ports:\n      - \"443:443\"\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/advanced-features/certificates/#single-domain","title":"Single Domain","text":"<pre><code>x-devbox-cert:\n  domains: [\"local.example.com\"]\n  keyFile: \"./certs/cert.key\"\n  certFile: \"./certs/cert.pem\"\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#wildcard-certificate","title":"Wildcard Certificate","text":"<pre><code>x-devbox-cert:\n  domains: [\"*.local.example.com\"]\n  keyFile: \"./certs/wildcard.key\"\n  certFile: \"./certs/wildcard.pem\"\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#multiple-domains","title":"Multiple Domains","text":"<pre><code>x-devbox-cert:\n  domains: \n    - \"api.local.example.com\"\n    - \"web.local.example.com\"\n    - \"admin.local.example.com\"\n  keyFile: \"./certs/multi.key\"\n  certFile: \"./certs/multi.pem\"\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#ca-installation","title":"CA Installation","text":"<p>First-time setup requires installing the CA certificate:</p> <pre><code># Install CA certificate (requires sudo)\nsudo devbox install-ca\n\n# Start services with SSL\ndevbox up\n</code></pre>"},{"location":"user-guide/advanced-features/certificates/#tips","title":"Tips","text":"<ul> <li>Use wildcard certificates when possible</li> <li>Keep certificates in a dedicated directory</li> <li>Use consistent naming patterns</li> <li>Back up your CA if needed</li> <li>Use relative paths in configuration </li> </ul>"},{"location":"user-guide/advanced-features/hosts/","title":"Host Management","text":"<p>DevBox automatically manages your <code>/etc/hosts</code> file to provide local domain routing for your services.</p>"},{"location":"user-guide/advanced-features/hosts/#configuration","title":"Configuration","text":"<p>Host management is configured in your <code>docker-compose.yml</code> using the <code>x-devbox-hosts</code> section:</p> <pre><code>x-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"local.example.com\"\n      - \"api.local.example.com\"\n      - \"admin.local.example.com\"\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#features","title":"Features","text":"<ul> <li>Automatic <code>/etc/hosts</code> management</li> <li>Multiple domains per IP address</li> <li>Support for wildcard domains</li> <li>Automatic cleanup on project shutdown</li> <li>Preserves existing host entries</li> </ul>"},{"location":"user-guide/advanced-features/hosts/#how-it-works","title":"How It Works","text":"<ol> <li>During Startup</li> <li>DevBox reads host configuration</li> <li>Updates <code>/etc/hosts</code> file</li> <li> <p>Requires sudo for first-time setup</p> </li> <li> <p>During Operation</p> </li> <li>Host entries remain active</li> <li>Local domains resolve to services</li> <li> <p>No manual configuration needed</p> </li> <li> <p>During Shutdown</p> </li> <li>Removes project-specific entries</li> <li>Preserves other host entries</li> <li>Cleans up automatically</li> </ol>"},{"location":"user-guide/advanced-features/hosts/#example-configuration","title":"Example Configuration","text":"<pre><code>x-devbox-hosts:\n  # Main application domains\n  - ip: 127.0.0.1\n    hosts:\n      - \"local.example.com\"\n      - \"*.local.example.com\"\n      - \"api.local.example.com\"\n      - \"admin.local.example.com\"\n\n  # Additional services\n  - ip: 127.0.0.1\n    hosts:\n      - \"redis.local\"\n      - \"minio.local\"\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/advanced-features/hosts/#local-development","title":"Local Development","text":"<pre><code>x-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"dev.example.com\"\n      - \"api.dev.example.com\"\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#multiple-services","title":"Multiple Services","text":"<pre><code>x-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"api.local\"\n      - \"web.local\"\n      - \"admin.local\"\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#wildcard-domains","title":"Wildcard Domains","text":"<pre><code>x-devbox-hosts:\n  - ip: 127.0.0.1\n    hosts:\n      - \"*.local.example.com\"\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#permission-handling","title":"Permission Handling","text":"<p>When DevBox needs to modify <code>/etc/hosts</code>:</p> <pre><code># First-time setup requires sudo\nsudo devbox update-hosts\n\n# Subsequent updates are automatic\ndevbox up\n</code></pre>"},{"location":"user-guide/advanced-features/hosts/#tips","title":"Tips","text":"<ul> <li>Use consistent domain patterns</li> <li>Group related services under subdomains</li> <li>Use wildcards for multiple services</li> <li>Keep domain names development-specific </li> </ul>"},{"location":"user-guide/advanced-features/profiles/","title":"Service Profiles","text":"<p>DevBox supports Docker Compose profiles, allowing you to start specific sets of services for different development scenarios.</p>"},{"location":"user-guide/advanced-features/profiles/#configuration","title":"Configuration","text":"<p>Profiles are configured using the standard Docker Compose <code>profiles</code> attribute:</p> <pre><code>services:\n  api:\n    image: api:latest\n    profiles: [\"api\", \"backend\"]\n\n  worker:\n    image: worker:latest\n    profiles: [\"worker\", \"backend\"]\n\n  frontend:\n    image: frontend:latest\n    profiles: [\"frontend\"]\n\n  db:\n    image: postgres:13\n    # No profile - always starts\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#using-profiles","title":"Using Profiles","text":"<p>Start services with specific profiles:</p> <pre><code># Start services with 'backend' profile\ndevbox up --profile backend\n\n# Start multiple profiles\ndevbox up --profile api --profile frontend\n\n# Start all services (including those without profiles)\ndevbox up\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#features","title":"Features","text":"<ul> <li>Group related services</li> <li>Selective service startup</li> <li>Multiple profile support</li> <li>Default service support</li> <li>Profile inheritance</li> </ul>"},{"location":"user-guide/advanced-features/profiles/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/advanced-features/profiles/#development-environments","title":"Development Environments","text":"<pre><code>services:\n  api:\n    profiles: [\"dev\", \"api\"]\n\n  api-mock:\n    profiles: [\"test\"]\n\n  frontend:\n    profiles: [\"dev\", \"frontend\"]\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#testing-setups","title":"Testing Setups","text":"<pre><code>services:\n  app:\n    profiles: [\"app\"]\n\n  test-db:\n    profiles: [\"test\"]\n\n  test-runner:\n    profiles: [\"test\"]\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#resource-management","title":"Resource Management","text":"<pre><code>services:\n  essential:\n    # No profile - always starts\n\n  memory-intensive:\n    profiles: [\"full\"]\n\n  monitoring:\n    profiles: [\"debug\"]\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#profile-combinations","title":"Profile Combinations","text":"<p>Services can belong to multiple profiles:</p> <pre><code>services:\n  api:\n    profiles: \n      - \"backend\"\n      - \"api\"\n      - \"dev\"\n\n  worker:\n    profiles:\n      - \"backend\"\n      - \"worker\"\n      - \"prod\"\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#default-services","title":"Default Services","text":"<p>Services without profiles always start:</p> <pre><code>services:\n  # Always starts\n  db:\n    image: postgres:13\n\n  # Only starts with 'api' profile\n  api:\n    profiles: [\"api\"]\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#commands-supporting-profiles","title":"Commands Supporting Profiles","text":"<p>Profiles work with various DevBox commands:</p> <pre><code># Start with profiles\ndevbox up --profile dev\n\n# Restart specific profile\ndevbox restart --profile api\n\n# View logs for profile\ndevbox logs --profile backend\n\n# Stop profile services\ndevbox down --profile worker\n</code></pre>"},{"location":"user-guide/advanced-features/profiles/#tips","title":"Tips","text":"<ul> <li>Group related services in profiles</li> <li>Use consistent profile naming</li> <li>Document profile purposes</li> <li>Consider dependencies between profiles</li> <li>Test profile combinations </li> </ul>"},{"location":"user-guide/basic-operations/down/","title":"Stopping Services","text":"<p>The <code>devbox down</code> command is used to stop and clean up services in your DevBox project.</p>"},{"location":"user-guide/basic-operations/down/#basic-usage","title":"Basic Usage","text":"<pre><code># Stop all services\ndevbox down\n\n# Stop services in a specific project\ndevbox --name project-name down\n</code></pre>"},{"location":"user-guide/basic-operations/down/#what-happens-during-shutdown","title":"What Happens During Shutdown","text":"<p>When you run <code>devbox down</code>, DevBox performs the following actions:</p> <ol> <li>Stop Services</li> <li>Stops all running containers</li> <li>Respects stop grace periods</li> <li> <p>Handles dependencies in correct order</p> </li> <li> <p>Clean Up</p> </li> <li>Removes stopped containers</li> <li>Cleans up networks</li> <li>Removes orphaned containers</li> </ol>"},{"location":"user-guide/basic-operations/down/#grace-periods","title":"Grace Periods","text":"<p>Services can define custom stop grace periods in the configuration:</p> <pre><code>services:\n  web:\n    # Allow 30 seconds for graceful shutdown\n    stop_grace_period: 30s\n</code></pre> <p>You can also set a default grace period for all services:</p> <pre><code>x-devbox-default-stop-grace-period: 30s\n</code></pre>"},{"location":"user-guide/basic-operations/down/#automatic-detection","title":"Automatic Detection","text":"<p>Like other commands, <code>down</code> supports automatic project detection:</p> <pre><code># DevBox will detect the project automatically\ncd /path/to/service\ndevbox down\n</code></pre>"},{"location":"user-guide/basic-operations/down/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/basic-operations/down/#hanging-services","title":"Hanging Services","text":"<p>If services don't stop properly: - Check for long-running processes - Verify grace period settings - Look for resource locks</p>"},{"location":"user-guide/basic-operations/down/#resource-cleanup","title":"Resource Cleanup","text":"<p>To ensure complete cleanup: - Check for remaining containers - Verify network removal - Monitor system resources </p>"},{"location":"user-guide/basic-operations/logs/","title":"Viewing Logs","text":"<p>The <code>devbox logs</code> command allows you to view and follow logs from your services. It provides a unified view of logs across all services or filtered to specific ones.</p>"},{"location":"user-guide/basic-operations/logs/#basic-usage","title":"Basic Usage","text":"<pre><code># View logs from all services\ndevbox logs\n\n# View logs from specific services\ndevbox logs service1 service2\n\n# View logs from a specific project\ndevbox --name project-name logs\n</code></pre>"},{"location":"user-guide/basic-operations/logs/#features","title":"Features","text":""},{"location":"user-guide/basic-operations/logs/#real-time-following","title":"Real-time Following","text":"<ul> <li>Logs are streamed in real-time</li> <li>Shows last 500 lines by default</li> <li>Color-coded by service</li> <li>Timestamp prefixing</li> </ul>"},{"location":"user-guide/basic-operations/logs/#output-format","title":"Output Format","text":"<p>Each log line includes: - Timestamp - Service name - Log level (if available) - Message content</p>"},{"location":"user-guide/basic-operations/logs/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/basic-operations/logs/#debugging","title":"Debugging","text":"<pre><code># Follow logs from specific service\ndevbox logs api\n\n# Monitor multiple related services\ndevbox logs api db cache\n</code></pre>"},{"location":"user-guide/basic-operations/logs/#development","title":"Development","text":"<pre><code># Watch development server output\ndevbox logs web\n\n# Monitor build process\ndevbox logs builder\n</code></pre>"},{"location":"user-guide/basic-operations/logs/#troubleshooting","title":"Troubleshooting","text":"<pre><code># Check startup issues\ndevbox logs\n\n# Monitor specific component\ndevbox logs problematic-service\n</code></pre>"},{"location":"user-guide/basic-operations/logs/#log-sources","title":"Log Sources","text":"<p>Logs are collected from: - Service stdout/stderr - Container logs - Application logs (if written to stdout/stderr)</p>"},{"location":"user-guide/basic-operations/logs/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/basic-operations/logs/#effective-log-viewing","title":"Effective Log Viewing","text":"<ul> <li>Use service-specific filtering</li> <li>Monitor related services together</li> <li>Follow logs during deployments</li> <li>Check logs after errors</li> </ul>"},{"location":"user-guide/basic-operations/logs/#log-management","title":"Log Management","text":"<ul> <li>Keep logs concise</li> <li>Use appropriate log levels</li> <li>Structure log messages</li> <li>Include relevant context</li> </ul>"},{"location":"user-guide/basic-operations/logs/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/basic-operations/logs/#missing-logs","title":"Missing Logs","text":"<p>If logs aren't visible: - Check service is running - Verify logging configuration - Review log drivers</p>"},{"location":"user-guide/basic-operations/logs/#performance-issues","title":"Performance Issues","text":"<p>If log viewing is slow: - Reduce number of services - Check log volume - Monitor resource usage</p>"},{"location":"user-guide/basic-operations/logs/#format-problems","title":"Format Problems","text":"<p>If logs are hard to read: - Check log formatting - Review service configuration - Verify logging drivers </p>"},{"location":"user-guide/basic-operations/run/","title":"Running Commands","text":"<p>The <code>devbox run</code> command executes predefined scenarios in your services. These scenarios are defined in your project configuration and provide a consistent way to run common tasks.</p>"},{"location":"user-guide/basic-operations/run/#basic-usage","title":"Basic Usage","text":"<pre><code># Run a scenario\ndevbox run scenario-name\n\n# Run a scenario with additional arguments\ndevbox run scenario-name arg1 arg2\n\n# Run a scenario in a specific project\ndevbox --name project-name run scenario-name\n</code></pre>"},{"location":"user-guide/basic-operations/run/#defining-scenarios","title":"Defining Scenarios","text":"<p>Scenarios are defined in your project configuration:</p> <pre><code>x-devbox-scenarios:\n  test:\n    service: api\n    command: [\"npm\", \"test\"]\n\n  migrate:\n    service: db\n    command: [\"./migrate.sh\"]\n    working_dir: /app/migrations\n\n  shell:\n    service: web\n    interactive: true\n    tty: true\n    command: [\"/bin/bash\"]\n    user: www-data\n</code></pre>"},{"location":"user-guide/basic-operations/run/#scenario-options","title":"Scenario Options","text":"<ul> <li><code>service</code>: Target service to run the command in</li> <li><code>command</code>: Command to execute</li> <li><code>working_dir</code>: Working directory in the container</li> <li><code>entrypoint</code>: Override container entrypoint</li> <li><code>user</code>: User to run as</li> <li><code>interactive</code>: Enable interactive mode (default: true)</li> <li><code>tty</code>: Allocate a TTY (default: true)</li> </ul>"},{"location":"user-guide/basic-operations/run/#environment-and-context","title":"Environment and Context","text":"<p>Commands run with: - Service's environment variables - Working directory context - User permissions as specified - Network access to other services</p>"},{"location":"user-guide/basic-operations/run/#examples","title":"Examples","text":""},{"location":"user-guide/basic-operations/run/#running-tests","title":"Running Tests","text":"<pre><code># Run unit tests\ndevbox run test\n\n# Run specific test file\ndevbox run test path/to/test.js\n</code></pre>"},{"location":"user-guide/basic-operations/run/#database-operations","title":"Database Operations","text":"<pre><code># Run migrations\ndevbox run migrate\n\n# Seed database\ndevbox run seed\n</code></pre>"},{"location":"user-guide/basic-operations/run/#development-tasks","title":"Development Tasks","text":"<pre><code># Start development server\ndevbox run dev\n\n# Build assets\ndevbox run build\n</code></pre>"},{"location":"user-guide/basic-operations/run/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/basic-operations/run/#service-not-running","title":"Service Not Running","text":"<ul> <li>Ensure required services are started</li> <li>Check service dependencies</li> <li>Verify service health</li> </ul>"},{"location":"user-guide/basic-operations/run/#permission-issues","title":"Permission Issues","text":"<ul> <li>Check user configuration</li> <li>Verify volume permissions</li> <li>Review service user settings</li> </ul>"},{"location":"user-guide/basic-operations/run/#command-failures","title":"Command Failures","text":"<ul> <li>Check command configuration</li> <li>Verify environment variables</li> <li>Review service logs </li> </ul>"},{"location":"user-guide/basic-operations/shell/","title":"Shell Access","text":"<p>The <code>devbox shell</code> command provides interactive shell access to running services. It automatically detects and uses the best available shell in the container.</p>"},{"location":"user-guide/basic-operations/shell/#basic-usage","title":"Basic Usage","text":"<pre><code># Access shell in a service\ndevbox shell service-name\n\n# Access shell in a specific project's service\ndevbox --name project-name shell service-name\n</code></pre>"},{"location":"user-guide/basic-operations/shell/#shell-detection","title":"Shell Detection","text":"<p>DevBox automatically tries shells in the following order: 1. <code>/bin/zsh</code> 2. <code>/bin/bash</code> 3. <code>/bin/sh</code> 4. <code>/bin/ash</code></p> <p>It uses the first available shell in the container.</p>"},{"location":"user-guide/basic-operations/shell/#features","title":"Features","text":""},{"location":"user-guide/basic-operations/shell/#interactive-session","title":"Interactive Session","text":"<ul> <li>Full TTY support</li> <li>Command history</li> <li>Tab completion (if supported by shell)</li> <li>Signal handling</li> </ul>"},{"location":"user-guide/basic-operations/shell/#container-context","title":"Container Context","text":"<ul> <li>Service environment variables</li> <li>Working directory preserved</li> <li>User context maintained</li> <li>Network access to other services</li> </ul>"},{"location":"user-guide/basic-operations/shell/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/basic-operations/shell/#debugging","title":"Debugging","text":"<pre><code># Access service for debugging\ndevbox shell api\n# Then use debugging tools inside container\n</code></pre>"},{"location":"user-guide/basic-operations/shell/#file-operations","title":"File Operations","text":"<pre><code># Manage files in container\ndevbox shell web\n# Navigate and edit files\n</code></pre>"},{"location":"user-guide/basic-operations/shell/#package-management","title":"Package Management","text":"<pre><code># Install or update packages\ndevbox shell app\n# Run package manager commands\n</code></pre>"},{"location":"user-guide/basic-operations/shell/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/basic-operations/shell/#shell-not-available","title":"Shell Not Available","text":"<p>If preferred shells aren't available: - Container uses minimal base image - Shell not installed in container - Permission issues accessing shell</p>"},{"location":"user-guide/basic-operations/shell/#connection-issues","title":"Connection Issues","text":"<p>If unable to connect: - Verify service is running - Check container health - Review service logs</p>"},{"location":"user-guide/basic-operations/shell/#environment-problems","title":"Environment Problems","text":"<p>If environment isn't as expected: - Check service configuration - Verify environment variables - Review container user context </p>"},{"location":"user-guide/basic-operations/up/","title":"Starting Services","text":"<p>The <code>devbox up</code> command is used to start services in your DevBox project. It handles everything from pulling images to configuring the environment.</p>"},{"location":"user-guide/basic-operations/up/#basic-usage","title":"Basic Usage","text":"<pre><code># Start all services\ndevbox up\n\n# Start with specific project\ndevbox --name project-name up\n\n# Start with specific profiles\ndevbox up --profile profile1 --profile profile2\n</code></pre>"},{"location":"user-guide/basic-operations/up/#what-happens-during-startup","title":"What Happens During Startup","text":"<p>When you run <code>devbox up</code>, the following steps are executed:</p> <ol> <li>Project Update</li> <li>Updates project configuration</li> <li> <p>Syncs with manifest repository</p> </li> <li> <p>Host File Update</p> </li> <li>Updates <code>/etc/hosts</code> entries</li> <li> <p>Configures domain routing</p> </li> <li> <p>SSL Certificate Setup</p> </li> <li>Generates/updates SSL certificates</li> <li> <p>Installs CA certificate if needed</p> </li> <li> <p>Source Code Update</p> </li> <li>Syncs source code repositories</li> <li> <p>Applies local mounts</p> </li> <li> <p>Service Build</p> </li> <li>Builds services with local Dockerfiles</li> <li> <p>Uses build cache when possible</p> </li> <li> <p>Service Start</p> </li> <li>Starts services in dependency order</li> <li>Applies environment variables</li> <li>Sets up networking</li> </ol>"},{"location":"user-guide/basic-operations/up/#using-profiles","title":"Using Profiles","text":"<p>Profiles allow you to start specific service combinations:</p> <pre><code># Start development profile\ndevbox up --profile dev\n\n# Start multiple profiles\ndevbox up --profile api --profile web\n</code></pre>"},{"location":"user-guide/basic-operations/up/#environment-variables","title":"Environment Variables","text":"<p>Services can access special environment variables:</p> <ul> <li><code>DEVBOX_SERVICE_NAME_SOURCE</code>: Indicates if a source is mounted</li> <li>Custom variables defined in <code>.env</code></li> </ul>"},{"location":"user-guide/basic-operations/up/#automatic-detection","title":"Automatic Detection","text":"<p>If you're in a Git repository that matches a project source:</p> <pre><code># DevBox will detect the project automatically\ncd /path/to/service\ndevbox up\n</code></pre>"},{"location":"user-guide/basic-operations/up/#common-issues","title":"Common Issues","text":""},{"location":"user-guide/basic-operations/up/#permission-errors","title":"Permission Errors","text":"<p>If you see permission errors: <pre><code># Run the host file update with sudo\nsudo devbox update-hosts\n\n# Install CA certificate with sudo\nsudo devbox install-ca\n</code></pre></p>"},{"location":"user-guide/basic-operations/up/#service-dependencies","title":"Service Dependencies","text":"<p>If services fail to start, check: - Service dependencies are properly defined - Required environment variables are set - Network connectivity between services </p>"},{"location":"user-guide/commands/destroy/","title":"Destroy Project","text":"<p>The <code>devbox destroy</code> command completely removes a DevBox project and its resources.</p>"},{"location":"user-guide/commands/destroy/#usage","title":"Usage","text":"<pre><code># Destroy current project (auto-detected)\ndevbox destroy\n\n# Destroy specific project\ndevbox --name project-name destroy\n</code></pre>"},{"location":"user-guide/commands/destroy/#what-gets-destroyed","title":"What Gets Destroyed","text":"<p>The command performs the following cleanup operations:</p> <ol> <li>Stops Services</li> <li>Stops all running containers</li> <li>Removes containers</li> <li>Cleans up networks</li> <li> <p>Removes volumes</p> </li> <li> <p>Cleans Up Host Entries</p> </li> <li>Removes project entries from <code>/etc/hosts</code></li> <li> <p>Cleans up domain routing</p> </li> <li> <p>Removes Project Files</p> </li> <li>Deletes project configuration</li> <li>Removes source repositories</li> <li>Cleans up local mounts</li> <li>Removes project directory</li> </ol>"},{"location":"user-guide/commands/destroy/#safety-features","title":"Safety Features","text":"<ul> <li>Requires project name or auto-detection</li> <li>Cannot destroy projects with running services</li> <li>Preserves local mounted directories</li> <li>Verifies project existence before destruction</li> </ul>"},{"location":"user-guide/commands/destroy/#example-output","title":"Example Output","text":"<pre><code>$ devbox destroy\n[*] Down services...\n \u283f Container api-1 Stopped\n \u283f Container db-1 Stopped\n \u283f Network example-app_default Removed\n\n[*] Removing hosts...\n[*] Removing project...\n\nProject 'example-app' has been destroyed.\n</code></pre>"},{"location":"user-guide/commands/destroy/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/destroy/#clean-project-removal","title":"Clean Project Removal","text":"<pre><code># Stop and remove everything\ndevbox destroy\n</code></pre>"},{"location":"user-guide/commands/destroy/#force-cleanup","title":"Force Cleanup","text":"<pre><code># Stop services and force removal\ndevbox down\ndevbox destroy\n</code></pre>"},{"location":"user-guide/commands/destroy/#switch-projects","title":"Switch Projects","text":"<pre><code># Remove old project and init new one\ndevbox destroy\ndevbox init https://github.com/example/new-project\n</code></pre>"},{"location":"user-guide/commands/destroy/#important-notes","title":"Important Notes","text":"<ul> <li>Irreversible: This operation cannot be undone</li> <li>Local Code: Your local source code is preserved if mounted</li> <li>Volumes: All Docker volumes are removed</li> <li>Configuration: All project configuration is deleted</li> </ul>"},{"location":"user-guide/commands/destroy/#error-handling","title":"Error Handling","text":"<p>The command handles various scenarios:</p> <ul> <li>Running Services: Stops them gracefully</li> <li>Missing Files: Continues with available resources</li> <li>Permission Issues: Provides sudo instructions</li> <li>Locked Resources: Suggests manual cleanup steps </li> </ul>"},{"location":"user-guide/commands/info/","title":"Project Info","text":"<p>The <code>devbox info</code> command provides detailed information about a project, including its sources and mounted volumes.</p>"},{"location":"user-guide/commands/info/#usage","title":"Usage","text":"<pre><code># Get info for current project (auto-detected)\ndevbox info\n\n# Get info for specific project\ndevbox --name project-name info\n</code></pre>"},{"location":"user-guide/commands/info/#output-sections","title":"Output Sections","text":""},{"location":"user-guide/commands/info/#sources","title":"Sources","text":"<p>Shows information about all source repositories in the project:</p> <pre><code> Sources:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name           \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 api-service    \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 worker (jobs)  \u2502 Add job processor     \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guide/commands/info/#mounts","title":"Mounts","text":"<p>Displays active local mounts:</p> <pre><code> Mounts:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Mount path         \u2502 Local path                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 ./sources/api      \u2502 /Users/dev/code/api-service   \u2502\n\u2502 ./sources/worker   \u2502 /Users/dev/code/worker        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guide/commands/info/#features","title":"Features","text":"<ul> <li>Shows Git status for all source repositories</li> <li>Displays active local mounts</li> <li>Includes sparse checkout information</li> <li>Updates project configuration before showing info</li> </ul>"},{"location":"user-guide/commands/info/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/info/#check-source-status","title":"Check Source Status","text":"<pre><code># View status of all sources\ndevbox info\n</code></pre>"},{"location":"user-guide/commands/info/#verify-mounts","title":"Verify Mounts","text":"<pre><code># Check which sources are mounted locally\ndevbox info | grep \"Mount\"\n</code></pre>"},{"location":"user-guide/commands/info/#project-health-check","title":"Project Health Check","text":"<p>The command performs several checks before showing information: * Updates project configuration * Updates host file entries * Updates SSL certificates * Verifies source repositories</p>"},{"location":"user-guide/commands/info/#automatic-detection","title":"Automatic Detection","text":"<p>Like other DevBox commands, <code>info</code> supports automatic project detection:</p> <pre><code># DevBox will detect the project based on:\n# - Current directory\n# - Git remote URLs\n# - Local mounts\ncd /path/to/service\ndevbox info\n</code></pre>"},{"location":"user-guide/commands/list/","title":"List Projects","text":"<p>The <code>devbox list</code> command shows all DevBox projects in your system along with their current status.</p>"},{"location":"user-guide/commands/list/#usage","title":"Usage","text":"<pre><code>devbox list\n</code></pre>"},{"location":"user-guide/commands/list/#output-format","title":"Output Format","text":"<p>The command displays a table with the following columns:</p> <ul> <li>Name: Project name</li> <li>Message: Latest Git commit message</li> <li>Author: Commit author</li> <li>Date: Commit date</li> </ul> <p>Example output: <pre><code> Projects:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name         \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 example-app  \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 demo-project \u2502 Fix database migration \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"user-guide/commands/list/#features","title":"Features","text":"<ul> <li>Lists all projects in your DevBox installation</li> <li>Shows latest Git commit information for each project</li> <li>Automatically detects project status</li> <li>Sorted by project name</li> </ul>"},{"location":"user-guide/commands/list/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/list/#view-all-projects","title":"View All Projects","text":"<pre><code># List all projects\ndevbox list\n</code></pre>"},{"location":"user-guide/commands/list/#filter-projects","title":"Filter Projects","text":"<pre><code># Filter projects by name (using shell patterns)\ndevbox list | grep \"api-*\"\n</code></pre>"},{"location":"user-guide/commands/list/#check-project-status","title":"Check Project Status","text":"<p>Use this command to: * See which projects are installed * Check latest changes in projects * Find specific projects by name </p>"},{"location":"user-guide/commands/ps/","title":"Process Status","text":"<p>The <code>devbox ps</code> command shows the status of all services in your project in real-time.</p>"},{"location":"user-guide/commands/ps/#usage","title":"Usage","text":"<pre><code># Show status of current project (auto-detected)\ndevbox ps\n\n# Show status of specific project\ndevbox --name project-name ps\n</code></pre>"},{"location":"user-guide/commands/ps/#output-format","title":"Output Format","text":"<p>The command displays a real-time table with the following columns:</p> <ul> <li>Age: How long the service has been running</li> <li>Name: Service name</li> <li>State: Current state (running, exited, etc.)</li> <li>Health: Health check status (if configured)</li> </ul> <p>Example output: <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Age      \u2502 Name        \u2502 State   \u2502 Health  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2d       \u2502 nginx       \u2502 running \u2502 healthy \u2502\n\u2502 01:23:45 \u2502 api         \u2502 running \u2502 healthy \u2502\n\u2502 00:15:30 \u2502 worker      \u2502 running \u2502 healthy \u2502\n\u2502          \u2502 db-migrate  \u2502 exited  \u2502         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"user-guide/commands/ps/#features","title":"Features","text":"<ul> <li>Real-time updates (refreshes every 250ms)</li> <li>Shows service uptime</li> <li>Displays health check status</li> <li>Compact view for many services</li> <li>Auto-sorts by state and age</li> </ul>"},{"location":"user-guide/commands/ps/#service-states","title":"Service States","text":"<p>Services can be in various states:</p> <ul> <li>running: Service is running normally</li> <li>exited: Service has stopped</li> <li>restarting: Service is being restarted</li> <li>created: Container created but not started</li> <li>paused: Service is paused</li> </ul>"},{"location":"user-guide/commands/ps/#health-status","title":"Health Status","text":"<p>If health checks are configured, shows:</p> <ul> <li>healthy: Service passed health check</li> <li>unhealthy: Service failed health check</li> <li>starting: Initial health check in progress</li> <li>(empty): No health check configured</li> </ul>"},{"location":"user-guide/commands/ps/#time-format","title":"Time Format","text":"<p>The Age column shows uptime in different formats:</p> <ul> <li>2d: Running for 2 days or more</li> <li>01:23:45: Running for less than a day (HH:MM:SS)</li> <li>(empty): Service not running</li> </ul>"},{"location":"user-guide/commands/ps/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/ps/#monitor-services","title":"Monitor Services","text":"<pre><code># Watch service status in real-time\ndevbox ps\n</code></pre>"},{"location":"user-guide/commands/ps/#check-health","title":"Check Health","text":"<pre><code># Monitor during deployment\ndevbox ps\n</code></pre>"},{"location":"user-guide/commands/ps/#debug-issues","title":"Debug Issues","text":"<pre><code># Watch for service restarts or health issues\ndevbox ps\n</code></pre>"},{"location":"user-guide/commands/ps/#tips","title":"Tips","text":"<ul> <li>Use with <code>devbox logs</code> for comprehensive monitoring</li> <li>Watch during service startup to catch issues</li> <li>Monitor health status during deployments</li> <li>Check age to detect unexpected restarts </li> </ul>"},{"location":"user-guide/commands/restart/","title":"Restart Services","text":"<p>The <code>devbox restart</code> command restarts services in your project, optionally rebuilding them with updated configuration.</p>"},{"location":"user-guide/commands/restart/#usage","title":"Usage","text":"<pre><code># Restart all services\ndevbox restart\n\n# Restart specific services\ndevbox restart service1 service2\n\n# Restart with specific profiles\ndevbox restart --profile profile1 --profile profile2\n\n# Restart specific project's services\ndevbox --name project-name restart service1\n</code></pre>"},{"location":"user-guide/commands/restart/#restart-process","title":"Restart Process","text":"<p>The command performs the following steps:</p> <ol> <li>Project Update</li> <li>Updates project configuration</li> <li>Updates host file entries</li> <li>Updates SSL certificates</li> <li> <p>Updates source code</p> </li> <li> <p>Service Shutdown</p> </li> <li>Stops specified services</li> <li>Preserves other running services</li> <li> <p>Handles dependencies properly</p> </li> <li> <p>Service Rebuild</p> </li> <li>Rebuilds services if needed</li> <li>Uses build cache when possible</li> <li> <p>Applies updated configuration</p> </li> <li> <p>Service Start</p> </li> <li>Starts services in correct order</li> <li>Applies environment variables</li> <li>Configures networking</li> </ol>"},{"location":"user-guide/commands/restart/#features","title":"Features","text":"<ul> <li>Selective service restart</li> <li>Profile support</li> <li>Dependency handling</li> <li>Configuration reloading</li> <li>Build cache utilization</li> </ul>"},{"location":"user-guide/commands/restart/#using-profiles","title":"Using Profiles","text":"<p>Restart services with specific profiles:</p> <pre><code># Restart development profile\ndevbox restart --profile dev\n\n# Restart multiple profiles\ndevbox restart --profile api --profile worker\n</code></pre>"},{"location":"user-guide/commands/restart/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/restart/#configuration-changes","title":"Configuration Changes","text":"<pre><code># Restart after changing configuration\ndevbox restart\n</code></pre>"},{"location":"user-guide/commands/restart/#single-service-update","title":"Single Service Update","text":"<pre><code># Restart specific service\ndevbox restart api\n</code></pre>"},{"location":"user-guide/commands/restart/#development-profile","title":"Development Profile","text":"<pre><code># Restart development services\ndevbox restart --profile dev\n</code></pre>"},{"location":"user-guide/commands/restart/#dependency-handling","title":"Dependency Handling","text":"<p>The restart command handles service dependencies in two ways:</p> <ol> <li>No Dependencies (default for manual restart)</li> <li>Only restarts specified services</li> <li> <p>Preserves running state of others</p> </li> <li> <p>With Dependencies (for configuration changes)</p> </li> <li>Restarts dependent services</li> <li>Maintains service order</li> </ol>"},{"location":"user-guide/commands/restart/#error-handling","title":"Error Handling","text":"<p>The command handles various scenarios:</p> <ul> <li>Configuration Errors: Shows detailed messages</li> <li>Build Failures: Preserves previous state</li> <li>Network Issues: Provides debugging info</li> <li>Dependency Problems: Suggests resolution</li> </ul>"},{"location":"user-guide/commands/restart/#tips","title":"Tips","text":"<ul> <li>Use <code>devbox ps</code> to monitor restart progress</li> <li>Check <code>devbox logs</code> for startup issues</li> <li>Restart single services for faster updates</li> <li>Use profiles to manage service groups </li> </ul>"},{"location":"user-guide/commands/update/","title":"Update Project","text":"<p>The <code>devbox update</code> command updates a project's configuration and source code repositories.</p>"},{"location":"user-guide/commands/update/#usage","title":"Usage","text":"<pre><code># Update current project (auto-detected)\ndevbox update\n\n# Update specific project\ndevbox --name project-name update\n</code></pre>"},{"location":"user-guide/commands/update/#update-process","title":"Update Process","text":"<p>The command performs updates in the following order:</p> <ol> <li>Project Configuration</li> <li>Updates project manifest repository</li> <li>Syncs with remote changes</li> <li> <p>Reloads project configuration</p> </li> <li> <p>Source Repositories</p> </li> <li>Updates all source repositories in parallel</li> <li>Applies sparse checkout settings</li> <li>Checks out specified branches</li> <li>Shows progress for each source</li> </ol>"},{"location":"user-guide/commands/update/#features","title":"Features","text":"<ul> <li>Parallel source updates for better performance</li> <li>Progress indicators for each operation</li> <li>Automatic project detection</li> <li>Emergency update mode for damaged projects</li> </ul>"},{"location":"user-guide/commands/update/#output-example","title":"Output Example","text":"<pre><code>[*] Updating project...\n[*] Updating sources...\n \u283f Source api-service: Synced\n \u283f Source worker: Synced\n \u283f Source frontend: Synced\n \u283f Source shared-lib: Synced\n\n Sources:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name           \u2502 Message                \u2502 Author       \u2502 Date        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 api-service    \u2502 Update API endpoints   \u2502 John Doe     \u2502 2 days ago  \u2502\n\u2502 worker         \u2502 Add job processor     \u2502 Jane Smith   \u2502 1 hour ago  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guide/commands/update/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/commands/update/#regular-updates","title":"Regular Updates","text":"<pre><code># Update everything to latest version\ndevbox update\n</code></pre>"},{"location":"user-guide/commands/update/#emergency-updates","title":"Emergency Updates","text":"<p>If a project's configuration is damaged: <pre><code># Force update using project name\ndevbox --name project-name update\n</code></pre></p>"},{"location":"user-guide/commands/update/#before-starting-work","title":"Before Starting Work","text":"<p>Best practice is to update before starting development: <pre><code>cd /path/to/service\ndevbox update\ndevbox up\n</code></pre></p>"},{"location":"user-guide/commands/update/#update-behavior","title":"Update Behavior","text":"<ul> <li>Project Manifest: Always pulls latest changes from the specified branch</li> <li>Source Repositories: Updates to latest commit on specified branches</li> <li>Local Mounts: Preserves local development mounts</li> <li>Configuration: Reloads after update</li> </ul>"},{"location":"user-guide/commands/update/#error-handling","title":"Error Handling","text":"<p>The command handles various error scenarios:</p> <ul> <li>Damaged Project: Attempts emergency update using project name</li> <li>Network Issues: Shows detailed error messages</li> <li>Git Conflicts: Provides instructions for resolution</li> <li>Permission Problems: Suggests corrective actions </li> </ul>"},{"location":"user-guide/project-management/development-philosophy/","title":"Development Philosophy","text":"<p>DevBox takes a unique approach to container-based development that prioritizes rapid development cycles and seamless local development experience.</p>"},{"location":"user-guide/project-management/development-philosophy/#the-devbox-way","title":"The DevBox Way","text":"<p>While containers are traditionally used to package and isolate complete applications, DevBox uses them primarily as development environments. This approach offers several key advantages:</p> <ul> <li>Instant Code Changes: No rebuilding containers for code changes</li> <li>Native Development Experience: Use your local IDE and tools</li> <li>Fast Feedback Loop: See changes immediately</li> <li>Consistent Environments: Everyone uses the same setup</li> </ul> <p>Modern Practices vs Developer Experience</p> <p>Modern container practices and platforms like Kubernetes have brought incredible benefits to production environments. However, they've also introduced complexity that can slow down the development feedback loop. DevBox aims to restore the rapid prototyping and testing capabilities that developers need, while still maintaining the benefits of containerization.</p> <p>By thoughtfully extending Docker Compose and focusing on developer workflows, DevBox helps bridge the gap between modern deployment practices and efficient local development. This means you can maintain production-ready container practices while enjoying fast, iterative development.</p> <p>Best Fit for DevBox</p> <p>DevBox's approach works particularly well for:</p> <ul> <li>Teams practicing continuous deployment with stable main branches</li> <li>Microservice architectures with multiple lightweight services</li> <li>Projects requiring rapid prototyping and quick iterations</li> <li>Development workflows focused on fast feedback loops</li> </ul> <p>It might not be the optimal choice for:</p> <ul> <li>Heavy computational or data processing services</li> <li>Teams with strict isolation requirements</li> <li>Projects with complex build-time optimizations</li> <li>Environments where production parity is critical</li> </ul> <p>Production vs Development</p> <p>This development-focused approach intentionally differs from how containers are typically used in production environments. While production containers package the entire application, DevBox containers serve as development environments with mounted source code. This trade-off significantly improves development speed and experience.</p>"},{"location":"user-guide/project-management/development-philosophy/#how-it-works","title":"How It Works","text":""},{"location":"user-guide/project-management/development-philosophy/#source-code-mounting","title":"Source Code Mounting","text":"<p>DevBox makes it easy to mount your local source code into containers:</p> <pre><code>services:\n  api:\n    volumes:\n      # Mount source code\n      - ./sources/api:/app\n      # Important: Mount persistent volumes AFTER source mounts\n      - api_storage:/app/storage\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#volume-order-matters","title":"Volume Order Matters","text":"<p>When mounting volumes, order is crucial:</p> <pre><code>services:\n  api:\n    volumes:\n      # \u274c Wrong order: persistent volume will hide source code\n      - api_storage:/app/storage\n      - ./sources/api:/app\n\n      # \u2705 Correct order: source code mounted first\n      - ./sources/api:/app\n      - api_storage:/app/storage\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#live-reloading","title":"Live Reloading","text":"<p>For optimal development experience, configure your application for live reloading:</p> <pre><code>services:\n  # Go service with live reloading\n  api:\n    command: [\"air\", \"-c\", \".air.toml\"]\n    volumes:\n      - ./sources/api:/app\n      - api_tmp:/app/tmp\n\n  # Node.js service with nodemon\n  frontend:\n    command: [\"nodemon\", \"app.js\"]\n    volumes:\n      - ./sources/frontend:/app\n      - node_modules:/app/node_modules\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/project-management/development-philosophy/#1-centralized-dockerfile-management","title":"1. Centralized Dockerfile Management","text":"<pre><code>x-devbox-sources:\n  api:\n    url: https://github.com/company/backend-services.git\n    branch: main\n    sparseCheckout:\n      - services/api/Dockerfile\n      - services/api/docker\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#2-development-specific-volumes","title":"2. Development-Specific Volumes","text":"<pre><code>services:\n  api:\n    volumes:\n      # Source code\n      - ./sources/api:/app\n\n      # Development-specific mounts\n      - api_node_modules:/app/node_modules\n      - api_tmp:/app/tmp\n      - api_logs:/app/logs\n\nvolumes:\n  api_node_modules:\n  api_tmp:\n  api_logs:\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#3-language-specific-configurations","title":"3. Language-Specific Configurations","text":""},{"location":"user-guide/project-management/development-philosophy/#go-applications","title":"Go Applications","text":"<pre><code>services:\n  api:\n    command: [\"air\", \"-c\", \".air.toml\"]\n    volumes:\n      - ./sources/api:/app\n      - api_tmp:/app/tmp  # For build artifacts\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#nodejs-applications","title":"Node.js Applications","text":"<pre><code>services:\n  frontend:\n    command: [\"npm\", \"run\", \"dev\"]\n    volumes:\n      - ./sources/frontend:/app\n      - node_modules:/app/node_modules  # Preserve dependencies\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#php-applications","title":"PHP Applications","text":"<pre><code>services:\n  web:\n    volumes:\n      - ./sources/web:/var/www/html\n      - vendor:/var/www/html/vendor  # Preserve Composer packages\n      - cache:/var/www/html/storage/cache\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"user-guide/project-management/development-philosophy/#hidden-source-code","title":"Hidden Source Code","text":"<pre><code>services:\n  api:\n    volumes:\n      # \u274c Cache volume hides source directory\n      - cache:/app/src/cache\n      - ./sources/api:/app\n\n      # \u2705 Cache mounted after source\n      - ./sources/api:/app\n      - cache:/app/src/cache\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#missing-build-context","title":"Missing Build Context","text":"<pre><code>services:\n  api:\n    build:\n      context: ./sources/api  # Points to mounted source\n      dockerfile: Dockerfile\n    volumes:\n      - ./sources/api:/app    # Mount same directory\n</code></pre>"},{"location":"user-guide/project-management/development-philosophy/#tips-for-success","title":"Tips for Success","text":"<ul> <li>Use Live Reload Tools: Configure language-specific tools for automatic reloading</li> <li>Mount Selectively: Only mount directories needed for development</li> <li>Preserve Dependencies: Use volumes for package directories (node_modules, vendor)</li> <li>Watch Volume Order: Mount source code before persistent volumes</li> <li>Share Dockerfiles: Keep development Dockerfiles in your manifest repository</li> <li>Development Defaults: Configure reasonable defaults for development environment</li> </ul>"},{"location":"user-guide/project-management/development-philosophy/#conclusion","title":"Conclusion","text":"<p>While this approach differs from traditional container usage, it provides an optimal development experience with:</p> <ul> <li>Instant code updates</li> <li>Native tooling support</li> <li>Fast iteration cycles</li> <li>Consistent environments</li> <li>No rebuild delays</li> </ul> <p>The trade-off between development convenience and production-like environments is intentional and has proven to significantly improve developer productivity. </p>"},{"location":"user-guide/project-management/structure/","title":"Project Structure","text":"<p>DevBox follows a standardized project structure to ensure consistency across all projects. Understanding this structure is key to working effectively with DevBox.</p>"},{"location":"user-guide/project-management/structure/#directory-layout","title":"Directory Layout","text":"<pre><code>project/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 sources/            # All source code from x-devbox-sources\n\u2502   \u251c\u2500\u2500 api/           # Each source in its own directory\n\u2502   \u251c\u2500\u2500 frontend/\n\u2502   \u2514\u2500\u2500 shared/\n\u251c\u2500\u2500 certs/             # SSL certificates\n\u2502   \u251c\u2500\u2500 ca.pem         # CA certificate\n\u2502   \u251c\u2500\u2500 ca.key         # CA private key\n\u2502   \u2514\u2500\u2500 *.pem         # Service certificates\n\u2514\u2500\u2500 .devbox/           # DevBox internal state\n</code></pre>"},{"location":"user-guide/project-management/structure/#source-code-location","title":"Source Code Location","text":"<p>DevBox automatically clones all repositories defined in <code>x-devbox-sources</code> into the <code>./sources</code> directory:</p> <pre><code>x-devbox-sources:\n  api:\n    url: https://github.com/company/api.git\n    # Will be cloned to ./sources/api\n\n  frontend:\n    url: https://github.com/company/frontend.git\n    # Will be cloned to ./sources/frontend\n</code></pre> <p>This standardized location means you can always reference source code using <code>./sources</code> in your <code>docker-compose.yml</code>:</p> <pre><code>services:\n  api:\n    volumes:\n      - ./sources/api:/app    # Always available at ./sources\n</code></pre>"},{"location":"user-guide/project-management/structure/#build-context","title":"Build Context","text":"<p>When building images, the build context is set to the project root:</p> <pre><code>services:\n  api:\n    build:\n      context: .              # Project root\n      dockerfile: ./sources/api/Dockerfile\n</code></pre> <p>This means source code is available at <code>./sources</code> during build:</p> <pre><code># Dockerfile\nCOPY ./sources/api /app      # Available during build\n\n# However, as per our Development Philosophy, we recommend\n# NOT copying source code into images for development.\n# Instead, mount it as a volume for faster development cycles.\n</code></pre> <p>Development vs Production Builds</p> <p>While source code is available during build via <code>./sources</code>, we recommend against copying it into development images. As explained in our Development Philosophy, mounting source code as volumes provides a better development experience.</p>"},{"location":"user-guide/project-management/structure/#ssl-certificates","title":"SSL Certificates","text":"<p>DevBox manages SSL certificates in the <code>./certs</code> directory:</p> <pre><code>x-devbox-cert:\n  domains: [\"*.local.example.com\"]\n  keyFile: \"./certs/local.example.com.key.pem\"   # Relative to project root\n  certFile: \"./certs/local.example.com.pem\"\n</code></pre> <p>The certificates can then be used by services:</p> <pre><code>services:\n  nginx:\n    volumes:\n      - ./certs:/etc/nginx/ssl:ro   # Mount certificates\n</code></pre>"},{"location":"user-guide/project-management/structure/#tips","title":"Tips","text":"<ul> <li>Always use <code>./sources/&lt;name&gt;</code> to reference source code</li> <li>Keep certificates in <code>./certs</code></li> <li>Use relative paths from project root</li> <li>Follow the standard structure for consistency</li> <li>Remember build context is project root</li> <li>Don't copy source code in development Dockerfiles </li> </ul>"}]}